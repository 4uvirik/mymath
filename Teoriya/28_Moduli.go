package main

// Go Модули - интсрумент работы с зависимостями в проекте
// Что бы проект был модульным нужно прописать go mod init "название модуля". Например:
// go mod init golangLessons
// Создается файл go.mod в нем по умолчанию название и версия Go которую мы используем

// Попробуем установить внешний пакет. Для этого используем команду например:
// go get "github.com/gofiber/fiber"
// далее этот модуль нужно импортировать и использовать

import (
	"fmt"

	"github.com/gofiber/fiber"
	// Попробуем установить другую версию модуля:
	// go get "github.com/gofiber/fiber/v2"
	// и затем так же импортируем ее и используем
	fiber2 "github.com/gofiber/fiber/v2"
)

func main() {
	fmt.Println(fiber.New())
	fmt.Println(fiber2.New())

}

// Попробуем использовать команду:
// go mod tidy
// Эта команда позволяет актуализировать наш файл go.mod, пробегаясь по нашим файлам
// она смотрит какие пакеты мы используем и эти пакеты она фиксирует в файле go.mod

// Так же указанные версии в go.mod сохраняются. И если открыть проект на другом компе то скачаются
// именно эти версии пакетов (удобно т.к. в новых версиях могут что то поменять и наш проект не будет работать)
// !!! Нужно актуализировать каждый раз когда добавляем или убираем пакет из нашего проекта

// Так же мы можем хранить все используемые модули с нашем проектом, используя:
// go mod vendor
// Теперь в корне нашего проекта создалась папка vendor и в нее скачиваются и складываются
// все наши пакеты которые мы используем
